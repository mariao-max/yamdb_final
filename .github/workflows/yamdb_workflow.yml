name: YamDB test, rebuild and deploy

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r ./api_yamdb/requirements.txt
    
    - name: Test with flake8
      run: |
        python -m flake8
    
    - name: Test with pytest
      run: |
        python -m pytest
  build_and_push_to_docker_hub:
    if: github.ref == 'refs/heads/master'
    name: Builds image and push it to Docker hub
    runs-on: ubuntu-latest
    needs: tests

    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Push to Docker hub
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:api_yamdb"
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/api_yamdb:latest

  deploy: 
    if: github.ref == 'refs/heads/master'
    name: Deploying docker container to remote server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub

    steps:
    - name: Execute remote ssh to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          docker-compose stop
          docker-compose rm web
          docker pull mariaodrin/api_yamdb:latest
          docker-compose up -d
  notify:
    name: Send notification in Telegram
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!